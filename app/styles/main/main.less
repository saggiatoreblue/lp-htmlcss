/*
    HOMESCONNECT 3.0
    UI Dashboard Template Stylesheet - Global styles shared across all themes

    [Table of Contents]
        Element Styles
        State Styles
        Custom Mixins
        Component Styles
        Javascript Styles
*/



/**
    Element Styles

    [Description]
        Default styles for HTML elements.
**/

*, *:before, *:after {
    // The following are useful styles to apply universally, which tend to be the default style more oft than not
    .box-sizing;
    position: relative;
    background-repeat: no-repeat;
    -webkit-tap-highlight-color: transparent;
    word-wrap: break-word;
}

html {
    @media (min-width: @zoom-breakpoint) { .rem(font-size, @default-font-size * 1.5); }
    height: 100%;
}

body {
    .rem(font-size, @default-font-size);
    .rem(padding, @padding-triple, 0);
    color: @default-text-color;
    font-family: @default-font-family;
    overflow-x: hidden;
    font-weight: @default-font-weight;
    line-height: @line-height-default;
    height: 100%;
}

h1,
h2,
h3,
h4,
h5,
h6 {
    .rem(font-size, @default-font-size);
    margin: 0;
}

h3 {.rem(font-size, @kilo);}
h5 {.rem(font-size, @milli);}

a {
  color: @link-color;
  text-decoration: none;
  cursor: pointer;
  &:visited { color: @link-color; }
  &:hover { color: @link-hover-color; }
}

img {
    display: block;
    max-width: 100%;
    max-height: 100%;
}

fieldset {
    border: none;
    padding: 0;
    margin: 0;
}

select {
    &:hover { cursor: pointer; }
}

label {
    &:disabled,
    &[disabled],
    .disabled & {
        color: @tertiary-color;
    }
}

option {
    background: #fff;
}

textarea {
    padding: 5px;
    border: none;
    background: none;
    width: 100%;
    height: 100%;
}

a,
input,
select,
textarea,
button {
  &:focus { outline: none; }
}

input,
select,
textarea {
    .rem(font-size, @milli);
    &:disabled,
    &[disabled]{
        background-color: @tertiary-color;
        background-color: rgba(204, 204, 204, 0.69);
        cursor: default;
    }
}

input::-ms-clear {
    display: none;
}



a[disabled] {
    cursor: default;
}

/**
    State Styles

    [Description]
        Styles for various UI states.
**/

:checked {}
:focus { outline-color: transparent; }
:required {}
:valid {}




/**
    Custom Mixins

    [Description]
        Define your repeatable patterns here. A few examples have been given to get you started.
        Remember to append a parenthesis after your custom mixins. This is to prevent them from being output after LESS compilation.
**/




#patterns {
    .button () {
        .rem(border, @border-width, @border-style, @button-border-color);
        .rem(border-radius, @button-border-radius);
        .rem(padding, @button-vertical-padding, @button-horizontal-padding);
        .rem(width, @button-width);
        background: @button-background-color;
        display: inline-block;
        color: @button-text-color;
        word-wrap: normal;
        line-height: @line-height-normalized;
        text-align: center;
        &:link,
        &:visited,
        &:hover,
        &:active {
            color: @button-text-color;
        }
        .active &,
        &:hover  {
            background: @button-background-hover-color;
        }
        @media (min-width: @small-desktop-breakpoint) {
            .transition(all, 0.3s, ease);
        }
    }

    .module () {
        .rem(box-shadow, 1, 1, 7, -1.5, rgba(0, 0, 0, 0.5));
        background-color: @module-background-color;
        z-index: 1;
        &.active {
        	.rem(margin, @gutter-double, 0);
		  	transform: scale(1.1);
        	z-index: 2;
        	@media (min-width: @tablet-breakpoint) {
        		transform: scale(1.3);
        	}
        }
    }

    .module-title () {
        .rem(font-size, @mega);
        color: @tertiary-color-light;
        .active & {
        	color: @primary-color;
        }
        @media (min-width: @medium-desktop-breakpoint) {
		  .rem(font-size, @giga);
        }
    }

    .module-body () {
        .rem(padding, @padding-quadruple * 2);
    }
}




/**
    Component Styles

    [Description]
        Each component is listed here in alphabetical order, along with any modifiers.
**/




////    Buttons    ////
.button {
    #patterns > .button;
    @media (min-width: @small-desktop-breakpoint) {
        .transition(all, 0.3s, ease);
    }
    &:link,
    &:visited,
    &:active  {
        color: @button-text-color;
    }
    &:hover {
        color: @button-text-color;
        background: @button-background-hover-color;
    }
    .button--text {
        .rem(font-size, @default-font-size);
        line-height: normal;
    }
}




////    Container    ////
.container {
    .contain(@gutter);
    .flex-display(flex);
	height: 100vh;
}
    .container--list {
	  	.size1of1;
	  	@media (min-width: @tablet-breakpoint) {
		  #patterns > .flex-row;
		  .flex-align-items(center);
	  	}
    }
        .container--item {
            .size1of1;
            @media (min-width: @tablet-breakpoint) {
                .size1of3;
            }
        }




////    Module    ////
.module {
    #patterns > .module;
    text-align: center;
    cursor: pointer;
}
    .module--figure {}
    .module--body {
        #patterns > .module-body;
    }
        .module--title {
            #patterns > .module-title;
        }
        .module--tier {
            .rem(font-size, @deci);
            font-weight: @font-weight-bolder;
			@media (min-width: @medium-desktop-breakpoint) {
			  .rem(font-size, @deca);
			}
        }
            .module--price {}
        .module--details {
            .rem(margin, @gutter-double, 0);
        }
            .module--list {
                .rem(padding-left, @padding-quadruple);
                text-align: left;
                display: inline-block;
            }
                .module--item {
                    &:not(:last-child) {
                        .rem(margin-bottom, @gutter-quarter);
                    }
                    i {
                        .rem(left, -@padding-double);
                        color: @tertiary-color;
                        .active & {
                            color: @primary-color;
                        }
                    }
                }